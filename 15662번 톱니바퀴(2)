

#include <iostream>
#include <vector>
#include <queue>
#define MAX 1001
using namespace std;

int t,k;
deque<int> dq[MAX];

void check(int cur,int dir){
    queue<pair<int,int>> q;
    q.push({cur,dir});
    int start=cur;
    int curdir=dir;
    while(start!=t){
        start++;
        curdir*=-1;
        if(dq[start-1][2]!=dq[start][6]){
            q.push({start,curdir});
        }else break;
    }
    
    start=cur;
    curdir=dir;
    while(start!=1){
        start--;
        curdir*=-1;
        if(dq[start+1][6]!=dq[start][2]){
            q.push({start,curdir});
        }else break;
    }
    
    while(!q.empty()){
        int now=q.front().first;
        int direct=q.front().second;
        q.pop();
        
        if(direct==-1){
            dq[now].push_back(dq[now].front());
            dq[now].pop_front();
        }else{
            dq[now].push_front(dq[now].back());
            dq[now].pop_back();
        }
    }
    
}


int main()
{
    ios::sync_with_stdio(0);
    cin.tie(0);
    cin>>t;
    for(int i=1;i<=t;i++){
        string s;
        cin>>s;
        for(int j=0;j<s.size();j++){
            dq[i].push_back(s[j]-'0');
        }
    }
    

    cin>>k;
    for(int i=0;i<k;i++){
        int cur,dir;
        cin>>cur>>dir;
        check(cur,dir);
    }
    
    int cnt=0;
    for(int i=1;i<=t;i++){
        if(dq[i][0])cnt++;
    }
    cout<<cnt<<endl;
    

    return 0;
}
