#include <iostream>
#include <vector>
#include <cstring>
#include <queue>
#define MAX 51
#define endl '\n'
#define ll long long
using namespace std;
int n;
int xpos[]={1,-1,0,0};
int ypos[]={0,0,1,-1};
int a[MAX][MAX];
int vis[MAX][MAX];
int answer=-1;

void bfs(){
	queue<pair<int,int>> q;
	q.push({0,0});
	vis[0][0]=0;
	
	while(!q.empty()){
		int y=q.front().first;
		int x=q.front().second;
		q.pop();
		
		for(int i=0;i<4;i++){
			int yy=y+ypos[i];
			int xx=x+xpos[i];
			if(xx<0 || xx>=n || yy<0 || yy>=n)continue;
		
			if(a[yy][xx] && (vis[yy][xx]==-1||vis[yy][xx]>vis[y][x])){
				q.push({yy,xx});
				vis[yy][xx]=vis[y][x];
			}else if(vis[yy][xx]==-1 || vis[yy][xx]>vis[y][x]+1){
				q.push({yy,xx});
				vis[yy][xx]=vis[y][x]+1;
			}
		}
		
		
	}
	
}



int main(void){
	ios::sync_with_stdio(false);
	cin.tie(0);
	
	cin>>n;
	for(int i=0;i<n;i++){
			string s;
			cin>>s;
			for(int k=0;k<s.size();k++){
				a[i][k]=s[k]-'0';
			}
	
	}
	
	memset(vis,-1,sizeof(vis));
	
	bfs();

	cout<<vis[n-1][n-1]<<endl;
	return 0;
}

